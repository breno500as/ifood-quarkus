version: "3.3"
services:
 postgres_cadastro:  #http://localhost:8080/swagger-ui
    image: postgres:12.2
    container_name: postgres_cadastro
    ports:
      - 5437:5432
    environment:
         - POSTGRES_PASSWORD=root
         - POSTGRES_USER=postgres
 postgres_market_place:  #http://localhost:8080/swagger-ui
    image: postgres:12.2
    container_name: postgres_market_place
    ports:
      - 5438:5432
    environment:
         - POSTGRES_PASSWORD=root
         - POSTGRES_USER=postgres
 keycloak_ifood: #http://localhost:8180
    image: jboss/keycloak:9.0.2
    container_name: keycloak_ifood
    environment:
         - KEYCLOAK_USER=admin
         - KEYCLOAK_PASSWORD=admin
    ports:
      - 8180:8080
 jaeger_ifood: #http://localhost:16686
    image: jaegertracing/all-in-one:1.18
    container_name: jaeger_ifood
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
 prometheus_ifood: #http://localhost:9090
    build:
       context: . 
       dockerfile: Dockerfile.prometheus
    container_name: prometheus_ifood
    ports:
      - 9090:9090
    network_mode: "host"
 grafana_ifood: #http://localhost:3000
    container_name: grafana_ifood
    image: grafana/grafana:6.5.0
    network_mode: "host"
    ports:
      - 3000:3000
 artemis_ifood: #http://localhost:8161/console/login
    container_name: artemis_ifood
    image: vromero/activemq-artemis:2.11.0
    network_mode: "host"
    environment: 
      ARTEMIS_USERNAME: admin
      ARTEMIS_PASSWORD: admin
 mongodb_ifood: #http://localhost:8161/console/login
    container_name: mongodb_ifood
    image: mongo:4.2.5-bionic
    ports:
      - "27018:27017"
    environment: 
      MONGO_INITDB_ROOT_USERNAME: pedido
      MONGO_INITDB_ROOT_PASSWORD: pedido
      MONGO_INITDB_DATABASE: pedido
 
 zookeeper: #Ferramenta que o kafka depende
    container_name: zookeeper_container
    image: debezium/zookeeper:1.1
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
 kafka: 
    container_name: kafka_container
    image: debezium/kafka:1.1
    ports:
     - 9092:9092
    links:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
     
 kafdrop: #http://localhost:9000/
    container_name: kafdrop_container
    image: obsidiandynamics/kafdrop:3.24.0
    environment:
       KAFKA_BROKERCONNECT: kafka:9092
    ports:
     - 9000:9000
    depends_on:
      - kafka

  # se ocorrer [1]: max virtual memory areas vm.max_map_count [65530] is too low, 
  # increase to at least [262144]
  # sudo sysctl -w vm.max_map_count=262144


 elastic: #http://localhost:9200
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    network_mode: "host"
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
 kibana: #http://localhost:5601
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.6.2
    network_mode: "host"
    environment:
      ELASTICSEARCH_HOSTS: http://localhost:9200
    depends_on:
      - elastic
  
 logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash-oss:6.8.2
    volumes:
      - source: ./pipelines
        target: /usr/share/logstash/pipeline
        type: bind
    network_mode: "host"
    ports:
      - "5601:5601"
    depends_on:
      - elastic
